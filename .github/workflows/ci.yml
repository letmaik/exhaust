name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

permissions: read-all

env:
  default_python: '3.10'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.default_python }}

    - name: Build wheel
      run: |
        set -ex
        pip install build
        python -m build --wheel

    - name: Store wheel as artifact
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  test:
    runs-on: ubuntu-latest

    needs: build

    strategy:
      fail-fast: false
      matrix:
        python:
        - '3.7'
        - '3.8'
        - '3.9'
        - '3.10'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Download wheels from artifact storage
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist

    - name: Install wheel
      run: pip install dist/*.whl

    - name: Install test dependencies
      run: pip install -r requirements-test.txt

    - name: Run tests
      run: |
        set -ex
        mkdir tmp && cd tmp
        pytest ../tests

  docs:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - uses: actions/checkout@v2
   
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.default_python }}

    - name: Download wheels from artifact storage
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist

    - name: Install from wheel
      run: |
        pip install dist/*.whl

    - name: Install documentation dependencies
      run: pip install -r requirements-docs.txt

    - name: Build docs
      run: sphinx-build -b html docs dist-docs

    - name: Store docs HTML as artifact
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: dist-docs

  publish-wheels:
    runs-on: ubuntu-latest

    needs: [build, test, docs]

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download wheels from artifact storage
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.default_python }}
    
    - name: Upload wheels to PyPI
      run: |
        pip install twine
        twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} --skip-existing dist/*

  publish-docs:
    runs-on: ubuntu-latest

    needs: [publish-wheels]

    permissions:
      contents: write

    steps:
    - name: Download docs HTML from artifact storage
      uses: actions/download-artifact@v2
      with:
        name: docs
        path: dist-docs

    - name: Upload docs to GitHub Pages
      uses: peaceiris/actions-gh-pages@47a6d63ea8b47b19328e258563aa1fbe224c0a23
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./dist-docs
